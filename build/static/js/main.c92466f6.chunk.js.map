{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","Video","bgPoster","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","imdb_id","href","overview","videos","video","key","production_companies","company","production_countries","country","seasons","season","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c92466f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.prototype = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\n// eslint-disable-next-line\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"assets/noPosterSmall.png\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"e9658b7e9fde9f5a87597714d40bf19c\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class Home extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.upcoming();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information 🚩\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class TV extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information. 🚩\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  font-size: ${(props) => (props.current ? \"15px\" : \"inherit\")};\n\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class Search extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n\n      this.setState({ loading: true, movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results. 🚩\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n  width: 60%;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n  font-size: 15px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n  margin-bottom: 20px;\n`;\n\nconst Link = styled.a`\n  display: inline-block;\n  width: 40px;\n  text-align: center;\n  background-color: yellow;\n  color: black;\n  font-weight: 800;\n  border-radius: 5px;\n`;\n\nconst Video = styled.a`\n  display: inline-block;\n\n  font-size: 18px;\n  background-color: red;\n  color: white;\n  font-weight: 800;\n  border-radius: 10px;\n  padding: 5px 10px;\n  margin-right: 5px;\n  margin-bottom: 5px;\n`;\n\nconst Image = styled.div`\n  display: inline-block;\n  background-image: url(${(props) => props.bgPoster});\n  width: 180px;\n  height: 260px;\n  border-radius: 4px;\n  background-position: center center;\n  margin-right: 5px;\n  margin-bottom: 5px;\n`;\n\nconst DetailPresenter = ({ result, loading, error, isMovie }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n\n            <Divider>🎞</Divider>\n\n            <Item>\n              {result.imdb_id && (\n                <Link\n                  href={`https://www.imdb.com/title/${result.imdb_id}/`}\n                  target=\"_blank\"\n                >\n                  IMDb\n                </Link>\n              )}\n            </Item>\n          </ItemContainer>\n\n          <Overview>{result.overview}</Overview>\n          <ItemContainer>\n            {result.videos.results.map((video) => (\n              <Video\n                key={video.id}\n                href={`https://www.youtube.com/watch?v=${video.key}`}\n                target=\"_blank\"\n              >\n                YouTube\n              </Video>\n            ))}\n          </ItemContainer>\n\n          <ItemContainer>\n            <Item>\n              {result.production_companies &&\n                result.production_companies.map((company, index) =>\n                  index === result.production_companies.length - 1\n                    ? company.name\n                    : `${company.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <ItemContainer>\n            <Item>\n              {result.production_countries &&\n                result.production_countries.map((country, index) =>\n                  index === result.production_countries.length - 1\n                    ? country.name\n                    : `${country.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n\n          {!isMovie && (\n            <div>\n              {result.seasons.map((season) => (\n                <Image\n                  bgPoster={`https://image.tmdb.org/t/p/w200${season.poster_path}`}\n                />\n              ))}\n            </div>\n          )}\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class Detail extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    // default state\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n      console.log(result);\n    } catch {\n      this.setState({ error: \"Can't find anythins. 🚩\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading, isMovie } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        error={error}\n        loading={loading}\n        isMovie={isMovie}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\n// eslint-disable-next-line\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}